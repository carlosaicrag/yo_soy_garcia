{"ast":null,"code":"var _jsxFileName = \"/Users/carlosgarciajr/Documents/programming/yo_soy_garcia/app/javascript/frontend/components/family_tree_index/family_tree_index_component.js\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React from \"react\";\n\nvar FamilyTreesIndex = /*#__PURE__*/function (_React$Component) {\n  _inherits(FamilyTreesIndex, _React$Component);\n\n  var _super = _createSuper(FamilyTreesIndex);\n\n  function FamilyTreesIndex(props) {\n    var _this;\n\n    _classCallCheck(this, FamilyTreesIndex);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      fetching: true\n    };\n    return _this;\n  }\n\n  _createClass(FamilyTreesIndex, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.props.fetchFamilyTrees().then(function () {\n        _this2.setState({\n          fetching: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.fetching) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 14\n          }\n        }, \"fetching\");\n      }\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, \"banana\");\n    }\n  }]);\n\n  return FamilyTreesIndex;\n}(React.Component);\n\nexport default FamilyTreesIndex;","map":{"version":3,"sources":["/Users/carlosgarciajr/Documents/programming/yo_soy_garcia/app/javascript/frontend/components/family_tree_index/family_tree_index_component.js"],"names":["React","FamilyTreesIndex","props","state","fetching","fetchFamilyTrees","then","setState","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,gB;;;;;AACJ,4BAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,QAAQ,EAAE;AAAX,KAAb;AAFgB;AAGjB;;;;wCAEkB;AAAA;;AACjB,WAAKF,KAAL,CAAWG,gBAAX,GACCC,IADD,CACM,YAAM;AACV,QAAA,MAAI,CAACC,QAAL,CAAc;AAACH,UAAAA,QAAQ,EAAC;AAAV,SAAd;AACD,OAHD;AAID;;;6BAEO;AACN,UAAI,KAAKD,KAAL,CAAWC,QAAf,EAAwB;AACtB,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,0BACE,mDADF;AAGD;;;;EArB4BJ,KAAK,CAACQ,S;;AAwBrC,eAAeP,gBAAf","sourcesContent":["import React from \"react\"\n\nclass FamilyTreesIndex extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {fetching: true}\n  }\n\n  componentDidMount(){\n    this.props.fetchFamilyTrees()\n    .then(() => {\n      this.setState({fetching:false})\n    })\n  }\n\n  render(){\n    if (this.state.fetching){\n      return <div>fetching</div>\n    }\n\n    return (\n      <>banana</>\n    )\n  }\n}\n\nexport default FamilyTreesIndex"]},"metadata":{},"sourceType":"module"}